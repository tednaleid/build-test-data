buildscript {
	repositories {
		maven { url "https://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
	}
}

plugins {
	id "groovy"
	id "org.grails.grails-web"
	id "org.grails.grails-gsp"
	id "war"
	id "idea"
	id "com.bertramlabs.asset-pipeline" version "${assetPipelineVersion}"
	id "eclipse"
}

version "0.1"
group "bookStore"

dependencies {
	profile("org.grails.profiles:web")

	implementation("org.grails:grails-core")
	implementation("org.grails:grails-logging")
	implementation("org.grails:grails-plugin-databinding")
	implementation("org.grails:grails-plugin-i18n")
	implementation("org.grails:grails-plugin-interceptors")
	implementation("org.grails:grails-plugin-rest")
	implementation("org.grails:grails-plugin-services")
	implementation("org.grails:grails-plugin-url-mappings")
	implementation("org.grails:grails-web-boot")
	implementation("org.grails.plugins:gsp")
	implementation("org.grails.plugins:hibernate5")
	implementation("org.grails.plugins:scaffolding")
	implementation("org.springframework.boot:spring-boot-autoconfigure")
	implementation("org.springframework.boot:spring-boot-starter")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.boot:spring-boot-starter-logging")
	implementation("org.springframework.boot:spring-boot-starter-tomcat")
	implementation("org.springframework.boot:spring-boot-starter-validation")

	console("org.grails:grails-console")

	runtimeOnly("com.bertramlabs.plugins:asset-pipeline-grails")
	runtimeOnly("com.h2database:h2")
	runtimeOnly("org.apache.tomcat:tomcat-jdbc")
	runtimeOnly("org.fusesource.jansi:jansi")

	integrationTestImplementation testFixtures("org.grails.plugins:geb")

	testImplementation("org.grails:grails-gorm-testing-support")
	testImplementation("org.grails:grails-web-testing-support")
	testImplementation("org.spockframework:spock-core")

	testImplementation project(':build-test-data')
}

assets {
	minifyJs = true
	minifyCss = true
}

