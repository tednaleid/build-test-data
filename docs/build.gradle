import org.asciidoctor.gradle.jvm.AsciidoctorTask

String getGrailsDocumentationVersion(String version) {
	if(version.endsWith('-SNAPSHOT')) {
		return 'snapshot'
	}

	return version
}

plugins {
	id 'org.asciidoctor.jvm.convert' version "4.0.3"
}

def asciidoctorAttributes = [
		'source-highlighter': 'coderay',
		toc                 : 'left',
		toclevels           : '2',
		'toc-title'         : 'Table of Contents',
		icons               : 'font',
		id                  : project.name + ':' + project.version,
		idprefix            : '',
		idseparator         : '-',
		version             : project.version,
		projectUrl          : "https://github.com/longwa/build-test-data",
		sourcedir           : "${rootProject.allprojects.find { it.name == 'build-test-data' }.projectDir}/src/main/groovy",
		gormDetailedLink    : "https://gorm.grails.org/${getGrailsDocumentationVersion(project['gorm.version'] as String)}/hibernate/manual/index.html",
		gormSummaryLink     : "https://docs.grails.org/${getGrailsDocumentationVersion(project.grailsVersion)}/guide/GORM.html",
		grailsDocBase       : "https://docs.grails.org/${getGrailsDocumentationVersion(project.grailsVersion)}"
]

tasks.named('asciidoctor', AsciidoctorTask) { AsciidoctorTask it ->
	it.jvm {
		jvmArgs("--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED", "--add-opens", "java.base/java.io=ALL-UNNAMED")
	}

	it.baseDirFollowsSourceDir()
	it.sourceDir project.file('src/docs')
	it.sources { include 'index.adoc' }
	it.outputDir = project.buildDir.toPath().resolve('docs').toFile()
	it.options doctype: 'book'
	it.attributes asciidoctorAttributes
}
