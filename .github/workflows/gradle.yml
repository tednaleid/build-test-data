name: "Java CI"
on:
  push:
    branches:
      - '[5-9].[0-9].x'
  pull_request:
    types: [ opened, reopened, synchronize ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['17', '21']
    steps:
      - name: "📥 Checkout the repository"
        uses: actions/checkout@v4
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{ matrix.java }}
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
      - name: "🔨 Run Base Tests"
        run: ./gradlew check --continue
      - name: "📤️ Upload Base Tests Results - alternativeConfig"
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: testreport-alternativeConfig-${{ matrix.java }}
          path: examples/alternativeConfig/build/reports/tests
      - name: "📤 Upload Base Tests Results - bookStore"
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: testreport-bookStore-${{ matrix.java }}
          path: examples/bookStore/build/reports/tests
  publish:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "📥 Checkout the repository"
        uses: actions/checkout@v4
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
      - name: "📤 Publish to Snapshot"
        env:
          MAVEN_PUBLISH_USERNAME: ${{ secrets.GITHUB_ACTOR }}
          MAVEN_PUBLISH_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_PUBLISH_URL: ${{ secrets.MAVEN_PUBLISH_SNAPSHOT_URL }}
          GRAILS_PUBLISH_RELEASE: "false"
        working-directory: ./plugin
        run: ../gradlew publish
      - name: "📜 Generate User Guide Documentation"
        if: success()
        run: ./gradlew docs
      - name: "🚀 Publish to Github Pages"
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          SKIP_SNAPSHOT: ${{ contains(needs.publish.outputs.release_version, 'M') }}
          TARGET_REPOSITORY: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build/docs
          DOC_FOLDER: gh-pages